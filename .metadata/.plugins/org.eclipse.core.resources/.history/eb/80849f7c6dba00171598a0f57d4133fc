package br.com.java.trees;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class LevelOrderTraversal {
	static void levelOrder(Node root) {
		Queue<Node> fila = new LinkedList<>();
		fila.add(root.data);
		while(fila.isEmpty()) {
			Node current = fila.poll();
			System.out.print(current.data + " ");
			if (current.left!=null) 
				fila.add(current.left);
			if (current.right!=null) 
				fila.add(current.right);
			
		}
	
	}


	public static Node insert(Node root, int data) {
		if (root == null) {
			return new LevelOrderTraversal().new Node(data);
		} else {
			Node cur;
			if (data <= root.data) {
				cur = insert(root.left, data);
				root.left = cur;
			} else {
				cur = insert(root.right, data);
				root.right = cur;
			}
			return root;
		}
	}

	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		Node root = null;
		while (T-- > 0) {
			int data = sc.nextInt();
			root = insert(root, data);
		}
		levelOrder(root);
	}

	class Node {
		Node left, right;
		int data;

		Node(int data) {
			this.data = data;
			left = right = null;
		}
	}
}
