package br.com.java.stacks;

import java.util.Scanner;
import java.util.Stack;

public class EqualStacks {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n1 = in.nextInt();
		int n2 = in.nextInt();
		int n3 = in.nextInt();
		Stack<Integer> h1 = new Stack<>();
		int[] h1temp = new int[n1];
		for (int h1_i = 0; h1_i < n1; h1_i++) {
			h1temp[h1_i] = in.nextInt();
		}
		for (int h1_i = n1 - 1; h1_i >= 0; h1_i--) {
			h1.add(h1temp[h1_i]);
		}

		int[] h2temp = new int[n2];
		Stack<Integer> h2 = new Stack<>();
		for (int h2_i = 0; h2_i < n2; h2_i++) {
			h2temp[h2_i] = in.nextInt();
		}
		for (int h2_i = n2 - 1; h2_i >= 0; h2_i--) {
			h2.add(h2temp[h2_i]);
		}
		int[] h3temp = new int[n3];
		Stack<Integer> h3 = new Stack<>();
		for (int h3_i = 0; h3_i < n3; h3_i++) {
			h3temp[h3_i] = in.nextInt();
		}
		for (int h3_i = n3 - 1; h3_i >= 0; h3_i--) {
			h3.add(h3temp[h3_i]);
		}
		checkisEquals(h1, h2, h3);

	}

	private static int checkisEquals(Stack<Integer> h1, Stack<Integer> h2, Stack<Integer> h3) {
		int sumH1;
		int sumH2;
		int sumH3;
		Object[] vals = h1.toArray();
		sumH1 = sumH2 = sumH3 = 0;
		for (Object obj : vals) {
			sumH1 += (Integer) obj;
		}
		vals = h2.toArray();
		for (Object obj : vals) {
			sumH2 += (Integer) obj;
		}
		vals = h3.toArray();
		for (Object obj : vals) {
			sumH3 += (Integer) obj;
		}
		while (!(sumH1 == sumH2 && sumH2 == sumH3)) {

			System.out.println(sumH1 + " " + sumH2 + " " + sumH3 + " ");
			int maxStack = getMaxValue(new int[] { sumH1, sumH2, sumH3 });
			maxStack++;
			if (maxStack == 1) {
				sumH1 -= h1.pop();
			}
			if (maxStack == 2) {
				sumH2 -= h2.pop();
			}
			if (maxStack == 3) {
				sumH3 -= h3.pop();
			}
		}
		return sumH1;

	}

	public static int getMaxValue(int[] numbers) {
		int maxValue = numbers[0];
		int stackNumber = 0;
		for (int i = 1; i < numbers.length; i++) {
			if (numbers[i] > maxValue) {
				maxValue = numbers[i];
				stackNumber = i;
			}
		}
		return stackNumber;
	}
}
